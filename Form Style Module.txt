Option Compare Database

Public Sub ChangeButtons(ByVal intT As Integer, ByVal strForm As String, ByVal intMax As Integer)
'This subroutine is used to change the ForeColor properties on any control, I used this module to change the ForeColor properties on labels I was using as
'buttons. When the user hovered their mouse over the label the color would change, and rever back when the mouse was not longer over the control.
'This is ment to work with a group of items all with the same name "btn" followed by a progressive numeral e.g. btn1, btn2, btn3 etc...
'intT = You must indicate the number of the control you are manipulating
'intMax = The total number of controls within the group
'strForm = the form name the controls are located on (use me.Name)

On Error Resume Next
Dim i As Integer
    i = 1
    Do Until i = (intMax + 1)
        If i <> intT Then
            If Forms(strForm).Controls("btn" & i).ForeColor = vbWhite Then Forms(strForm).Controls("btn" & i).ForeColor = vbBlack
        End If
        i = i + 1
    Loop
    If intT = 99 Then Exit Sub
    If Forms(strForm).Controls("btn" & intT).ForeColor = vbBlack Then Forms(strForm).Controls("btn" & intT).ForeColor = vbWhite
End Sub

Public Sub ChangeTabs(ByVal intT As Integer, ByVal strPage As String, ByVal strForm As String, ByVal intMax As Integer)
'This sub replaces the standard tab controls on a multipage tab control
'When the user would click on the selected tab the page would change and the tab would change color.
'intT the number if the control being called
'strPage the name of the page you are calling
'strForm the name of the form the control is located on (use me.name)
'intMax the number of tabs in the control group
'Each tab must be named "tab" plus an ordered numeric e.g. tab1, tab2, tab3 etc..

Dim i As Integer
    i = 1
    Do Until i = (intMax + 1)
        Forms(strForm).Controls("tab" & i).ForeColor = vbWhite
        Forms(strForm).Controls("tab" & i).BackColor = vbBlack
        Forms(strForm).Controls("tab" & i).BorderColor = vbBlack
        i = i + 1
    Loop
    With Forms(strForm).Controls("tab" & intT)
        .ForeColor = vbBlack
        .BackColor = vbWhite
        '.BorderColor = vbWhite
    End With
    Forms(strForm).tabPages.Pages.Item(strPage).SetFocus
End Sub

Public Sub ChangeSort(ByVal intMe As Integer, ByVal strSort As String, ByVal strForm As String, ByVal intMax As Integer)
'This function changes the sort order of any multirecord main form by clicking on the header label of the column
'intMe = the number of the header label you clicked on
'strSort = the control source you want to filter by
'strForm = the name of the form the control is on (use me.Name)
'intMax = the total number of sortable columns on your form
'Each column label must be named "Label" plus an ordered numeric e.g. Label1, Label2, Label3 etc..
'The initial value of each column label tag must be set to "0" for this to work.

Dim i As Integer
i = 1
    Do Until i = (intMax + 1)
    If intMe <> i Then
        If Forms(strForm).Controls("Label" & i).BackColor = RGB(192, 192, 192) Then Forms(strForm).Controls("Label" & i).BackColor = vbBlack
        If Forms(strForm).Controls("Label" & i).ForeColor = vbBlack Then Forms(strForm).Controls("Label" & i).ForeColor = vbWhite
        If Forms(strForm).Controls("Label" & i).BorderColor = RGB(192, 192, 192) Then Forms(strForm).Controls("Label" & i).BorderColor = vbBlack
        If Forms(strForm).Controls("Label" & i).Tag <> "0" Then Forms(strForm).Controls("Label" & i).Caption = Left(Forms(strForm).Controls("Label" & i).Caption, Len(Forms(strForm).Controls("Label" & i).Caption) - 2)
        Forms(strForm).Controls("Label" & i).Tag = "0"
    End If
    i = i + 1
    Loop
    If Forms(strForm).Controls("Label" & intMe).Tag = "0" Or Forms(strForm).Controls("Label" & intMe).Tag = "" Then
        Forms(strForm).OrderBy = "[" & strSort & "]"
        Forms(strForm).Controls("Label" & intMe).Tag = "1"
        Forms(strForm).Controls("Label" & intMe).BackColor = RGB(192, 192, 192)
        Forms(strForm).Controls("Label" & intMe).ForeColor = vbBlack
        Forms(strForm).Controls("Label" & intMe).BorderColor = RGB(192, 192, 192)
        Forms(strForm).Controls("Label" & intMe).Caption = Forms(strForm).Controls("Label" & intMe).Caption & " " & ChrW(9660)
    ElseIf Forms(strForm).Controls("Label" & intMe).Tag = "1" Then
        Forms(strForm).OrderBy = "[" & strSort & "] DESC"
        Forms(strForm).Controls("Label" & intMe).Tag = "2"
        Forms(strForm).Controls("Label" & intMe).Caption = Left(Forms(strForm).Controls("Label" & intMe).Caption, Len(Forms(strForm).Controls("Label" & intMe).Caption) - 2)
        Forms(strForm).Controls("Label" & intMe).Caption = Forms(strForm).Controls("Label" & intMe).Caption & " " & ChrW(9650)
    ElseIf Forms(strForm).Controls("Label" & intMe).Tag = "2" Then
        Forms(strForm).OrderBy = ""
        Forms(strForm).Controls("Label" & intMe).Tag = "0"
        Forms(strForm).Controls("Label" & intMe).BackColor = vbBlack
        Forms(strForm).Controls("Label" & intMe).ForeColor = vbWhite
        Forms(strForm).Controls("Label" & intMe).BorderColor = vbBlack
        Forms(strForm).Controls("Label" & intMe).Caption = Left(Forms(strForm).Controls("Label" & intMe).Caption, Len(Forms(strForm).Controls("Label" & intMe).Caption) - 2)
    End If
    Forms(strForm).OrderByOn = True
End Sub

Public Sub ChangeSortSub(ByVal intMe As Integer, ByVal strSort As String, ByVal strForm As String, ByVal intMax As Integer, ByVal strSubCntr As String)
'This function changes the sort order of any multirecord sub form by clicking on the header label of the column
'intMe = the number of the header label you clicked on
'strSort = the control source you want to filter by
'strForm = the name of the form the control is on (use me.Name)
'intMax = the total number of sortable columns on your form
'strSubCntr = The name of the subform control you wish to sort
'Each column label must be named "Label" plus an ordered numeric e.g. Label1, Label2, Label3 etc..
'The initial value of each column label tag must be set to "0" for this to work.

Dim i As Integer
i = 1
    Do Until i = (intMax + 1)
    If intMe <> i Then
        If Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & i).BackColor = RGB(192, 192, 192) Then Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & i).BackColor = vbBlack
        If Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & i).BorderColor = RGB(192, 192, 192) Then Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & i).BorderColor = vbBlack
        If Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & i).ForeColor = vbBlack Then Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & i).ForeColor = vbWhite
        If Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & i).Tag <> "0" Then Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & i).Caption = Left(Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & i).Caption, Len(Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & i).Caption) - 2)
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & i).Tag = "0"
    End If
    i = i + 1
    Loop
    If Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Tag = "0" Or Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Tag = "" Then
        Forms(strForm).Controls(strSubCntr).Form.OrderBy = "[" & strSort & "]"
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Tag = "1"
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).BackColor = RGB(192, 192, 192)
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).BorderColor = RGB(192, 192, 192)
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).ForeColor = vbBlack
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Caption = Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Caption & " " & ChrW(9660)
    ElseIf Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Tag = "1" Then
        Forms(strForm).Controls(strSubCntr).Form.OrderBy = "[" & strSort & "] DESC"
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Tag = "2"
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Caption = Left(Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Caption, Len(Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Caption) - 2)
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Caption = Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Caption & " " & ChrW(9650)
    ElseIf Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Tag = "2" Then
        Forms(strForm).Controls(strSubCntr).Form.OrderBy = ""
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Tag = "0"
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).BackColor = vbBlack
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).BorderColor = vbBlack
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).ForeColor = vbWhite
        Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Caption = Left(Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Caption, Len(Forms(strForm).Controls(strSubCntr).Form.Controls("Label" & intMe).Caption) - 2)
    End If
    Forms(strForm).Controls(strSubCntr).Form.OrderByOn = True
End Sub

Public Sub ChangeLinks(ByVal intT As Integer, ByVal strForm As String, ByVal intMax As Integer)
'This function was used for labels I was representing as links, made some lists of reports more user friendly
'intT = the number of the current label
'strForm = the name of the form the control is located on (use me.Name)
'intMax = the total number of "links" on the form
'Each "link" label must be named "lnk" plus an ordered numeric e.g. lnk1, lnk2, lnk3 etc..

On Error Resume Next
Dim i As Integer
    i = 1
    Do Until i = (intMax + 1)
        If i <> intT Then
            If Forms(strForm).Controls("lnk" & i).ForeColor = vbBlue Then Forms(strForm).Controls("lnk" & i).ForeColor = vbBlack
        End If
        i = i + 1
    Loop
    If intT = 99 Then Exit Sub
    If Forms(strForm).Controls("lnk" & intT).ForeColor = vbBlack Then Forms(strForm).Controls("lnk" & intT).ForeColor = vbBlue
End Sub

Public Function FindRecord(ByVal strRecord As String, ByVal strTable As String, ByVal strField As String) As Boolean
'This function searches the database for a record and returns True or False
Dim intType As Integer
intType = CurrentDb.TableDefs(strTable).Fields(strField).Type

If intType = 4 Then 'If the field type is numeric then
    If IsNumeric(strRecord) = False Then
        FindRecord = False
        Exit Function
    End If
    If DCount("[" & strField & "]", "[" & strTable & "]", "[" & strField & "] = " & CLng(strRecord)) = 0 Then
        FindRecord = False
    Else
        FindRecord = True
    End If
Else 'If field type is string then
    If DCount("[" & strField & "]", "[" & strTable & "]", "[" & strField & "] = '" & strRecord & "'") = 0 Then
        FindRecord = False
    Else
        FindRecord = True
    End If
End If
End Function

Public Function CheckDate(ByRef datDate As Date) As Boolean
Dim Result As String
    Result = InputBox("Enter Delivery Date", "Yellow Pad")
    If Result = vbNullString Then
        MsgBox "Operation Canceled", vbOKOnly, "Cancelled"
        CheckDate = False
    ElseIf IsDate(Result) = False Then
        MsgBox "Invalid date has been entered.", vbCritical + vbOKOnly, "Enter a valid date"
        CheckDate = False
    Else
        datDate = CDate(Result)
        CheckDate = True
    End If
End Function
